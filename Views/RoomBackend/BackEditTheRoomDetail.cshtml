@model List<sln_SingelApartment.ViewModels.CRoomViewModel>

@{
    ViewBag.Title = "BackEditTheRoomDetail";
    Layout = "~/Views/Shared/Back_Layout.cshtml";
}

<body>

    <h2 style="margin-left:150px;">XXX房間 編輯</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style=" width:800px; margin:auto;">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.FirstOrDefault().roomID)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().roomname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="width:300px;">
                    @Html.EditorFor(model => model.FirstOrDefault().roomname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().roomname, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().roomtype, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="width:300px;">
                    @Html.EditorFor(model => model.FirstOrDefault().roomtype, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().roomtype, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().entity_room.BuildCase.BuildCaseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="width:300px;">
                    @Html.EditorFor(model => model.FirstOrDefault().entity_room.BuildCase.BuildCaseName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().entity_room.BuildCase.BuildCaseName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="width:300px;">
                    @Html.EditorFor(model => model.FirstOrDefault().description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().rent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="width:300px;">
                    @Html.EditorFor(model => model.FirstOrDefault().rent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().rent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().squarefootage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="width:300px;">
                    @Html.EditorFor(model => model.FirstOrDefault().squarefootage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().squarefootage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().entity_room.RoomFacilities.FirstOrDefault().Facility.FacilityName, htmlAttributes: new { @class = "control-label col-md-2" })

                @foreach (var i in Model.FirstOrDefault().entity_room.RoomFacilities)
                {
                    <div class="col-md-10" style="width:150px;">
                        @Html.EditorFor(model => i.Facility.FacilityName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => i.Facility.FacilityName, "", new { @class = "text-danger" })
                    </div>
                }

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstOrDefault().floor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="width:300px;">
                    @Html.EditorFor(model => model.FirstOrDefault().floor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().floor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <input type="submit" value="確定儲存" class="btn btn-default" />
                    <input type="button" value="回到前一頁" class="btn btn-default" onclick="history.back()" />


                </div>

            </div>
        </div>
    }



    @*@section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }*@


</body>